services:
  nginx:
    image: nginx:alpine
    restart: always
    container_name: nginx_container
    profiles: ["nginx"]
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
      - /etc/letsencrypt/live/konektix.eu/fullchain.pem:/etc/nginx/certs/fullchain.pem
      - /etc/letsencrypt/live/konektix.eu/privkey.pem:/etc/nginx/certs/privkey.pem
      - web-app:/apps/web-app
    depends_on:
      - web-app
    network_mode: host

  mqtt-broker:
    image: eclipse-mosquitto:2
    container_name: mqtt_broker_container
    ports:
      - 1883:1883
      - 8883:8883
      - 9002:9001
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
      - /etc/letsencrypt/live/konektix.eu/chain.pem:/mosquitto/certs/chain.pem
      - /etc/letsencrypt/live/konektix.eu/cert.pem:/mosquitto/certs/cert.pem
      - /etc/letsencrypt/live/konektix.eu/privkey.pem:/mosquitto/certs/privkey.pem
    networks:
      - common_network

  iot-data-hub-db:
    extends:
      file: ../iot-data-hub/docker-compose.yml
      service: iot-data-hub-db
    networks:
      - common_network
    environment:
      TIMESCALEDB_TELEMETRY: off
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_DB: iotDataHubDB
      POSTGRES_USER: ${IOT_DATA_HUB_DB_USER}
      POSTGRES_PASSWORD: ${IOT_DATA_HUB_DB_PASSWORD}
    volumes:
      - iot_data_hub_db_data:/var/lib/postgresql/data

  iot-data-hub:
    extends:
      file: ../iot-data-hub/docker-compose.yml
      service: iot-data-hub
    networks:
      - common_network
    environment:
      - DATABASE_URL: postgresql://${IOT_DATA_HUB_DB_USER}:${IOT_DATA_HUB_DB_PASSWORD}@iot-data-hub-db:5432/iotDataHubDB
    depends_on:
      - iot-data-hub-db
      - mqtt-broker

  keycloak-db:
    image: postgres:17
    container_name: keycloak_db_container
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloakDB
      POSTGRES_USER: ${KEYCLOAK_POSTGRES_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
    ports:
      - 5433:5432
    networks:
      - common_network

  keycloak:
    image: quay.io/keycloak/keycloak:26.3
    container_name: keycloak_container
    environment:
    #   KC_HOSTNAME: localhost
    #   KC_HOSTNAME_PORT: 8080
    #   KC_HOSTNAME_STRICT_BACKCHANNEL: false
    #   KC_HTTP_ENABLED: true
    #   KC_HOSTNAME_STRICT_HTTPS: false
    #   KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db/keycloakDB
      KC_DB_USERNAME: ${KEYCLOAK_POSTGRES_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
    #   KC_PROXY_HEADERS: xforwarded
    command: ${KEYCLOAK_COMMAND}
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - keycloak-db
    networks:
      - common_network
    
  web-app:
    build:
      dockerfile: ../web-app/Dockerfile
      context: ../web-app
    volumes:
      - web_app:/app/dist

networks:
  common_network:

volumes:
  iot_data_hub_db_data:
  keycloak_db_data:
  web_app:
